package ${pkg.BizImpl};


import com.baomidou.mybatisplus.core.metadata.IPage;
import ${pkg.Biz}.${Biz};
import ${package.Entity}.${entity};
import ${package.ServiceImpl}.${table.serviceImplName};
import ${pkg.ConvertDb}.${Convert};
import ${pkg.Bo}.${Bo};
import ${pkg.Dto}.${Dto};
import ${pkg.Bo}.${SearchBo};
import ${pkg.Wrapper}.${Wrapper};
import com.wingflare.lib.mybatis.plus.utils.PageUtil;
import com.wingflare.lib.core.exceptions.DataNotFoundException;
import com.wingflare.lib.standard.PageDto;
import com.wingflare.lib.standard.bo.IdBo;
import com.wingflare.lib.core.validation.Create;
import com.wingflare.lib.core.validation.Update;
import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;

import jakarta.annotation.Resource;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.groups.Default;

/**
 * <p>
 * ${table.comment} 业务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Component
@Validated
public class ${BizImpl} implements ${Biz}
{
#if($controllerMethods.hasMethod)
    #set($serName = $StringUtil.uncapitalize(${table.serviceImplName}))
    #set($doName = $StringUtil.uncapitalize(${entity}))

    @Resource
    private ${table.serviceImplName} ${serName};
    #if($controllerMethods.list)

    /**
     * 查询${tableBusinessName}列表
     */
    #if($isOverrideMethodMethod)
	@Override
	#end
    public PageDto<${Dto}> list(@Valid ${SearchBo} bo)
    {
        IPage<${entity}> iPage = ${serName}.page(
            ${serName}.createPage(bo),
            ${Wrapper}.getLambdaQueryWrapper(bo)
        );
        return PageUtil.convertIPage(iPage,
            ${Convert}.convert.doToDtoList(iPage.getRecords()));
    }
    #end
    #if($controllerMethods.get)

    /**
     * 查询${tableBusinessName}详情
     */
    #if($isOverrideMethod)
	@Override
	#end
    public ${Dto} get(@Valid @NotNull IdBo bo)
    {
        return ${Convert}.convert.doToDto(${serName}.getById(bo.getId()));
    }
    #end
    #if($controllerMethods.getOnlyOne)

    /**
     * 通过条件查询单个${tableBusinessName}详情
     */
    #if($isOverrideMethod)
	@Override
	#end
    public ${Dto} getOnlyOne(@Valid @NotNull ${SearchBo} bo)
    {
        return ${Convert}.convert.doToDto(${serName}.getOne(${Wrapper}.getLambdaQueryWrapper(bo)));
    }
    #end
    #if($controllerMethods.delete)

    /**
     * 删除${tableBusinessName}
     */
    #if($isOverrideMethod)
	@Override
	#end
    public ${Dto} delete(@Valid @NotNull IdBo bo)
    {
        ${entity} ${doName} = ${serName}.getById(bo.getId());

        if (${doName} != null) {
            ${serName}.removeById(bo.getId());
		    return ${Convert}.convert.doToDto(${doName});
        }

        return null;
    }
        #end
    #if($controllerMethods.create)

    /**
     * 新增${tableBusinessName}
     */
    #if($isOverrideMethod)
	@Override
	#end
    @Validated({Default.class, Create.class})
    public ${Dto} create(@Valid @NotNull ${Bo} bo)
    {
        ${entity} ${doName} = ${Convert}.convert.boToDo(bo);
        ${serName}.save(${doName});
        return ${Convert}.convert.doToDto(${doName});
    }
    #end
    #if($controllerMethods.update)

    /**
     * 更新${tableBusinessName}
     */
    #if($isOverrideMethod)
	@Override
	#end
    @Validated({Default.class, Update.class})
    public ${Dto} update(@Valid @NotNull ${Bo} bo)
    {
        ${entity} old${entity} = ${serName}.getById(bo.get${primaryField.capitalName}());

        if (old${entity} == null) {
            throw new DataNotFoundException("${tableBusinessName}.data.notfound");
        }

        ${entity} ${doName} = ${Convert}.convert.boToDo(bo);
        ${entity} oldField = old${entity}.setOnNew(${doName});

        if (oldField != null) {
            ${serName}.updateById(old${entity});
        }

        return ${Convert}.convert.doToDto(${doName});
    }
    #end

#end
}